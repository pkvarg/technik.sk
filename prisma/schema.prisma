// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}



datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// model Account {
//   id       String    @id @default(auto()) @map("_id") @db.ObjectId
//   userId             String @db.ObjectId
//   type               String
//   provider           String
//   providerAccountId  String
//   refresh_token      String?  
//   access_token       String?  
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String?  
//   session_state      String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

// model Session {
//   id       String    @id @default(auto()) @map("_id") @db.ObjectId
//   sessionToken String   @unique
//   userId       String @db.ObjectId
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model User {
//  id       String    @id @default(auto()) @map("_id") @db.ObjectId
//   name          String?
//   email         String?   @unique
//   emailVerified DateTime?
//   image         String?
//   accounts      Account[]
//   sessions      Session[]
//     hashedPassword String
//   isAdmin  Boolean @default(false)
//   isRoot Boolean @default(false)
//   createdAt       DateTime @default(now()) 

// }

// model VerificationToken {
//   id       String    @id @default(auto()) @map("_id") @db.ObjectId
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

model Subscriber {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  createdAt       DateTime @default(now()) 
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    
  email     String    @unique
  hashedPassword String
  isAdmin  Boolean @default(false)
  isRoot Boolean @default(false)
  createdAt       DateTime @default(now()) 
}